      PROGRAM BMPTOFITS
C  Convert BMP picture to FITS file.
C  =================================
C
C  Usage:
C  ======
C  ./bmptofits bmpfile.bmp [-mean=] [-o=fitsfile.fits]
C
C  mean - mean counts of each pixel.
C
      IMPLICIT NONE
      INTEGER :: STATUS,NARGS,BMOFFSET,NX,NY,PBITS,COMPRESS,PSIZE,K
      DOUBLE PRECISION :: DMEAN
      DOUBLE PRECISION,ALLOCATABLE :: DIMG(:,:)
      CHARACTER(LEN=256) :: ARG,INFILE,OUTFILE,BASENAME,EXTNAME,PREFIX
      INTERFACE
      SUBROUTINE BMPINFO(FILENAME,BMOFFSET,NX,NY,PBITS,COMPRESS)
      CHARACTER(LEN=*),INTENT(IN) :: FILENAME
      INTEGER*4,INTENT(OUT) :: BMOFFSET,NX,NY,PBITS,COMPRESS
      END SUBROUTINE BMPINFO
      SUBROUTINE RESOLVEPATH(PATH,BASENAME,EXTNAME)
      CHARACTER(LEN=*), INTENT(IN) :: PATH
      CHARACTER(LEN=*), INTENT(OUT) :: BASENAME,EXTNAME
      END SUBROUTINE RESOLVEPATH
      SUBROUTINE READBMP(FILENAME,BMOFFSET,NX,NY,PSIZE,DIMG)
      CHARACTER(LEN=*),INTENT(IN) :: FILENAME
      INTEGER,INTENT(IN) :: BMOFFSET,NX,NY,PSIZE
      DOUBLE PRECISION,INTENT(OUT) :: DIMG(NX,NY)
      END SUBROUTINE READBMP
      SUBROUTINE WRITEIMAGE(FILENAME,FPIXELS,LPIXELS,DIMG)
      INTEGER, INTENT(IN) :: FPIXELS(3),LPIXELS(3)
      DOUBLE PRECISION, INTENT(IN) :: DIMG(*)
      CHARACTER(LEN=*), INTENT(IN) :: FILENAME
      END SUBROUTINE WRITEIMAGE
      END INTERFACE
      STATUS=0
      CALL GET_COMMAND_ARGUMENT(1,ARG)
      IF(INDEX(ARG,'-help').GT.0)THEN
        PRINT *,'Usage:'
        PRINT *,'======'
        PRINT *,'bmptofits bmpfile.bmp [-mean=] [-o=output]'
        PRINT *,'  mean - mean counts of each pixel'
        STOP
      END IF
      CALL GET_COMMAND_ARGUMENT(1,INFILE)
      CALL RESOLVEPATH(INFILE,BASENAME,EXTNAME)
      OUTFILE=TRIM(BASENAME)//'.fits'
      DMEAN=-1.0D0
      NARGS=COMMAND_ARGUMENT_COUNT()
      DO K=2,NARGS
        CALL GET_COMMAND_ARGUMENT(K,ARG)
        IF(INDEX(ARG,'-mean=').EQ.1)THEN
          READ(ARG(INDEX(ARG,'-mean=')+6:),*)DMEAN
        ELSE IF(INDEX(ARG,'-o=').EQ.1)THEN
          OUTFILE=ARG(INDEX(ARG,'-o=')+3:)
        ELSE
          PRINT *,'Unknown argument '//TRIM(ARG)
          STOP
        END IF
      END DO
      CALL BMPINFO(INFILE,BMOFFSET,NX,NY,PBITS,COMPRESS)
      ALLOCATE(DIMG(NX,NY),STAT=STATUS)
      IF(STATUS.NE.0)THEN
        PRINT *,'error: out of memory.'
        STOP
      END IF
      IF(COMPRESS .NE. 0) THEN
        PRINT *,'error: unsupported compress type.'
        STOP
      END IF
      IF(PBITS .NE. 8 .AND. PBITS .NE. 24 .AND. PBITS .NE. 32) THEN
        PRINT *,'error: unsupported depth.'
        STOP
      END IF
      PSIZE=INT(PBITS)/8
      CALL READBMP(INFILE,BMOFFSET,NX,NY,PSIZE,DIMG)
      IF(DMEAN .GT. 0.0D0) THEN
        DIMG = DIMG/(SUM(DIMG)/(DBLE(NX)*DBLE(NY)*DMEAN))
      END IF
      CALL WRITEIMAGE(TRIM(OUTFILE),(/1,1,1/),(/NX,NY,1/),DIMG)
      DEALLOCATE(DIMG)
      STOP
      END PROGRAM BMPTOFITS
